services:
  mapoteca_app:
    build:
      context: . 
      dockerfile: Dockerfile
    container_name: mapoteca_app
    ports:
      - "3000:3000"
    volumes:
      - mapoteca_data_transient:/app/data
      - sip_storage:/app/temp_ingestao_sip 
    environment:
      - DATABASE_URL=postgresql://user:password@mapoteca_db_container:5432/mapoteca_db?schema=public
      - STORAGE_SERVICE_URL=http://storage_app:3003
      - GESTAO_DADOS_API_URL=http://gestao_dados_app:8000
      - REDIS_HOST=redis_cache 
      - REDIS_PORT=6379
    networks:
      - minha-rede-app
    depends_on:
      - mapoteca_db
      - storage_app
      - gestao_dados_app
      - redis

  gestao_dados_app:
    build:
      context: ../gestao-dados
      dockerfile: Dockerfile
    container_name: gestao_dados_app
    ports:
      - "8000:8000"
    volumes:
      - sip_storage:/app/temp_ingestao_sip
      - aip_output:/app/output_normalizado
    environment:
      - DATABASE_URL=postgresql://user:password@preservacao_db:5432/preservacao_db
      
      - POSTGRES_HOST=preservacao_db
      - POSTGRES_DB=preservacao_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      
      - MAPOTECA_SERVICE_URL=http://mapoteca_app:3000/internal/processing-complete
      - STORAGE_SERVICE_URL=http://storage_app:3003/storage/upload
      - MINIO_SERVICE_API_URL=http://storage_app:3003
      - REDIS_HOST=redis_cache 
      - REDIS_PORT=6379
    networks:
      - minha-rede-app
    depends_on:
      preservacao_db: 
        condition: service_healthy 
      redis:
        condition: service_started

  storage_app:
    build:
      context: ../minio-mapoteca
      dockerfile: Dockerfile
    container_name: storage_app
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - S3_REGION=us-east-1
      - S3_ENDPOINT=http://minio:9000
      - MINIO_PUBLIC_URL=http://localhost:9000       
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
    networks:
      - minha-rede-app
    depends_on:
      minio:
        condition: service_healthy

  minio:
    image: quay.io/minio/minio
    container_name: minio_server
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DOMAIN=minio
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    volumes:
      - minio_data:/data
    networks:
      - minha-rede-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  preservacao_db:
    image: postgres:13-alpine
    container_name: preservacao_db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=preservacao_db
    volumes:
      - preservacao_db_data:/var/lib/postgresql/data
    networks:
      - minha-rede-app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d preservacao_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  mapoteca_db:
    image: postgres:13-alpine
    container_name: mapoteca_db_container
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mapoteca_db
    volumes:
      - mapoteca_db_data:/var/lib/postgresql/data
    networks:
      - minha-rede-app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mapoteca_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    networks:
      - minha-rede-app
    

networks:
  minha-rede-app:
    driver: bridge

volumes:
  mapoteca_db_data:
  preservacao_db_data:
  sip_storage:
  minio_data:
  aip_output:
  mapoteca_data_transient: {}